package com.dhsy.async.mapper;

import com.dhsy.async.entity.PointFlow;
import com.dhsy.async.entity.PointFlowCriteria;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.session.RowBounds;
import org.apache.ibatis.type.JdbcType;

public interface PointFlowMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @SelectProvider(type=PointFlowSqlProvider.class, method="countByExample")
    long countByExample(PointFlowCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @DeleteProvider(type=PointFlowSqlProvider.class, method="deleteByExample")
    int deleteByExample(PointFlowCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @Delete({
        "delete from point_flow",
        "where number = #{number,jdbcType=VARCHAR}"
    })
    int deleteByPrimaryKey(String number);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @Insert({
        "insert into point_flow (number, sheetName, ",
        "memName, memCard, ",
        "createTime, bizName, ",
        "memMobile, occurPoints, ",
        "points, direction, ",
        "status)",
        "values (#{number,jdbcType=VARCHAR}, #{sheetname,jdbcType=VARCHAR}, ",
        "#{memname,jdbcType=VARCHAR}, #{memcard,jdbcType=VARCHAR}, ",
        "#{createtime,jdbcType=DATE}, #{bizname,jdbcType=VARCHAR}, ",
        "#{memmobile,jdbcType=VARCHAR}, #{occurpoints,jdbcType=DECIMAL}, ",
        "#{points,jdbcType=DECIMAL}, #{direction,jdbcType=VARCHAR}, ",
        "#{status,jdbcType=INTEGER})"
    })
    int insert(PointFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @InsertProvider(type=PointFlowSqlProvider.class, method="insertSelective")
    int insertSelective(PointFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @SelectProvider(type=PointFlowSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="number", property="number", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="sheetName", property="sheetname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memName", property="memname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memCard", property="memcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.DATE),
        @Result(column="bizName", property="bizname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memMobile", property="memmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="occurPoints", property="occurpoints", jdbcType=JdbcType.DECIMAL),
        @Result(column="points", property="points", jdbcType=JdbcType.DECIMAL),
        @Result(column="direction", property="direction", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER)
    })
    List<PointFlow> selectByExampleWithRowbounds(PointFlowCriteria example, RowBounds rowBounds);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @SelectProvider(type=PointFlowSqlProvider.class, method="selectByExample")
    @Results({
        @Result(column="number", property="number", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="sheetName", property="sheetname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memName", property="memname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memCard", property="memcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.DATE),
        @Result(column="bizName", property="bizname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memMobile", property="memmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="occurPoints", property="occurpoints", jdbcType=JdbcType.DECIMAL),
        @Result(column="points", property="points", jdbcType=JdbcType.DECIMAL),
        @Result(column="direction", property="direction", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER)
    })
    List<PointFlow> selectByExample(PointFlowCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @Select({
        "select",
        "number, sheetName, memName, memCard, createTime, bizName, memMobile, occurPoints, ",
        "points, direction, status",
        "from point_flow",
        "where number = #{number,jdbcType=VARCHAR}"
    })
    @Results({
        @Result(column="number", property="number", jdbcType=JdbcType.VARCHAR, id=true),
        @Result(column="sheetName", property="sheetname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memName", property="memname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memCard", property="memcard", jdbcType=JdbcType.VARCHAR),
        @Result(column="createTime", property="createtime", jdbcType=JdbcType.DATE),
        @Result(column="bizName", property="bizname", jdbcType=JdbcType.VARCHAR),
        @Result(column="memMobile", property="memmobile", jdbcType=JdbcType.VARCHAR),
        @Result(column="occurPoints", property="occurpoints", jdbcType=JdbcType.DECIMAL),
        @Result(column="points", property="points", jdbcType=JdbcType.DECIMAL),
        @Result(column="direction", property="direction", jdbcType=JdbcType.VARCHAR),
        @Result(column="status", property="status", jdbcType=JdbcType.INTEGER)
    })
    PointFlow selectByPrimaryKey(String number);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @UpdateProvider(type=PointFlowSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") PointFlow record, @Param("example") PointFlowCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @UpdateProvider(type=PointFlowSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") PointFlow record, @Param("example") PointFlowCriteria example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @UpdateProvider(type=PointFlowSqlProvider.class, method="updateByPrimaryKeySelective")
    int updateByPrimaryKeySelective(PointFlow record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    @Update({
        "update point_flow",
        "set sheetName = #{sheetname,jdbcType=VARCHAR},",
          "memName = #{memname,jdbcType=VARCHAR},",
          "memCard = #{memcard,jdbcType=VARCHAR},",
          "createTime = #{createtime,jdbcType=DATE},",
          "bizName = #{bizname,jdbcType=VARCHAR},",
          "memMobile = #{memmobile,jdbcType=VARCHAR},",
          "occurPoints = #{occurpoints,jdbcType=DECIMAL},",
          "points = #{points,jdbcType=DECIMAL},",
          "direction = #{direction,jdbcType=VARCHAR},",
          "status = #{status,jdbcType=INTEGER}",
        "where number = #{number,jdbcType=VARCHAR}"
    })
    int updateByPrimaryKey(PointFlow record);
}