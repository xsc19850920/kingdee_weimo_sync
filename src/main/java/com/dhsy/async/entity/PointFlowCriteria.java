package com.dhsy.async.entity;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class PointFlowCriteria {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public PointFlowCriteria() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andNumberIsNull() {
            addCriterion("number is null");
            return (Criteria) this;
        }

        public Criteria andNumberIsNotNull() {
            addCriterion("number is not null");
            return (Criteria) this;
        }

        public Criteria andNumberEqualTo(String value) {
            addCriterion("number =", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotEqualTo(String value) {
            addCriterion("number <>", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThan(String value) {
            addCriterion("number >", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberGreaterThanOrEqualTo(String value) {
            addCriterion("number >=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThan(String value) {
            addCriterion("number <", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLessThanOrEqualTo(String value) {
            addCriterion("number <=", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberLike(String value) {
            addCriterion("number like", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotLike(String value) {
            addCriterion("number not like", value, "number");
            return (Criteria) this;
        }

        public Criteria andNumberIn(List<String> values) {
            addCriterion("number in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotIn(List<String> values) {
            addCriterion("number not in", values, "number");
            return (Criteria) this;
        }

        public Criteria andNumberBetween(String value1, String value2) {
            addCriterion("number between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andNumberNotBetween(String value1, String value2) {
            addCriterion("number not between", value1, value2, "number");
            return (Criteria) this;
        }

        public Criteria andSheetnameIsNull() {
            addCriterion("sheetName is null");
            return (Criteria) this;
        }

        public Criteria andSheetnameIsNotNull() {
            addCriterion("sheetName is not null");
            return (Criteria) this;
        }

        public Criteria andSheetnameEqualTo(String value) {
            addCriterion("sheetName =", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameNotEqualTo(String value) {
            addCriterion("sheetName <>", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameGreaterThan(String value) {
            addCriterion("sheetName >", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameGreaterThanOrEqualTo(String value) {
            addCriterion("sheetName >=", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameLessThan(String value) {
            addCriterion("sheetName <", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameLessThanOrEqualTo(String value) {
            addCriterion("sheetName <=", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameLike(String value) {
            addCriterion("sheetName like", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameNotLike(String value) {
            addCriterion("sheetName not like", value, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameIn(List<String> values) {
            addCriterion("sheetName in", values, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameNotIn(List<String> values) {
            addCriterion("sheetName not in", values, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameBetween(String value1, String value2) {
            addCriterion("sheetName between", value1, value2, "sheetname");
            return (Criteria) this;
        }

        public Criteria andSheetnameNotBetween(String value1, String value2) {
            addCriterion("sheetName not between", value1, value2, "sheetname");
            return (Criteria) this;
        }

        public Criteria andMemnameIsNull() {
            addCriterion("memName is null");
            return (Criteria) this;
        }

        public Criteria andMemnameIsNotNull() {
            addCriterion("memName is not null");
            return (Criteria) this;
        }

        public Criteria andMemnameEqualTo(String value) {
            addCriterion("memName =", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameNotEqualTo(String value) {
            addCriterion("memName <>", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameGreaterThan(String value) {
            addCriterion("memName >", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameGreaterThanOrEqualTo(String value) {
            addCriterion("memName >=", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameLessThan(String value) {
            addCriterion("memName <", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameLessThanOrEqualTo(String value) {
            addCriterion("memName <=", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameLike(String value) {
            addCriterion("memName like", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameNotLike(String value) {
            addCriterion("memName not like", value, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameIn(List<String> values) {
            addCriterion("memName in", values, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameNotIn(List<String> values) {
            addCriterion("memName not in", values, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameBetween(String value1, String value2) {
            addCriterion("memName between", value1, value2, "memname");
            return (Criteria) this;
        }

        public Criteria andMemnameNotBetween(String value1, String value2) {
            addCriterion("memName not between", value1, value2, "memname");
            return (Criteria) this;
        }

        public Criteria andMemcardIsNull() {
            addCriterion("memCard is null");
            return (Criteria) this;
        }

        public Criteria andMemcardIsNotNull() {
            addCriterion("memCard is not null");
            return (Criteria) this;
        }

        public Criteria andMemcardEqualTo(String value) {
            addCriterion("memCard =", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardNotEqualTo(String value) {
            addCriterion("memCard <>", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardGreaterThan(String value) {
            addCriterion("memCard >", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardGreaterThanOrEqualTo(String value) {
            addCriterion("memCard >=", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardLessThan(String value) {
            addCriterion("memCard <", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardLessThanOrEqualTo(String value) {
            addCriterion("memCard <=", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardLike(String value) {
            addCriterion("memCard like", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardNotLike(String value) {
            addCriterion("memCard not like", value, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardIn(List<String> values) {
            addCriterion("memCard in", values, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardNotIn(List<String> values) {
            addCriterion("memCard not in", values, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardBetween(String value1, String value2) {
            addCriterion("memCard between", value1, value2, "memcard");
            return (Criteria) this;
        }

        public Criteria andMemcardNotBetween(String value1, String value2) {
            addCriterion("memCard not between", value1, value2, "memcard");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterionForJDBCDate("createTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("createTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterionForJDBCDate("createTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterionForJDBCDate("createTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("createTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterionForJDBCDate("createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andBiznameIsNull() {
            addCriterion("bizName is null");
            return (Criteria) this;
        }

        public Criteria andBiznameIsNotNull() {
            addCriterion("bizName is not null");
            return (Criteria) this;
        }

        public Criteria andBiznameEqualTo(String value) {
            addCriterion("bizName =", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameNotEqualTo(String value) {
            addCriterion("bizName <>", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameGreaterThan(String value) {
            addCriterion("bizName >", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameGreaterThanOrEqualTo(String value) {
            addCriterion("bizName >=", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameLessThan(String value) {
            addCriterion("bizName <", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameLessThanOrEqualTo(String value) {
            addCriterion("bizName <=", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameLike(String value) {
            addCriterion("bizName like", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameNotLike(String value) {
            addCriterion("bizName not like", value, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameIn(List<String> values) {
            addCriterion("bizName in", values, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameNotIn(List<String> values) {
            addCriterion("bizName not in", values, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameBetween(String value1, String value2) {
            addCriterion("bizName between", value1, value2, "bizname");
            return (Criteria) this;
        }

        public Criteria andBiznameNotBetween(String value1, String value2) {
            addCriterion("bizName not between", value1, value2, "bizname");
            return (Criteria) this;
        }

        public Criteria andMemmobileIsNull() {
            addCriterion("memMobile is null");
            return (Criteria) this;
        }

        public Criteria andMemmobileIsNotNull() {
            addCriterion("memMobile is not null");
            return (Criteria) this;
        }

        public Criteria andMemmobileEqualTo(String value) {
            addCriterion("memMobile =", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileNotEqualTo(String value) {
            addCriterion("memMobile <>", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileGreaterThan(String value) {
            addCriterion("memMobile >", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileGreaterThanOrEqualTo(String value) {
            addCriterion("memMobile >=", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileLessThan(String value) {
            addCriterion("memMobile <", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileLessThanOrEqualTo(String value) {
            addCriterion("memMobile <=", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileLike(String value) {
            addCriterion("memMobile like", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileNotLike(String value) {
            addCriterion("memMobile not like", value, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileIn(List<String> values) {
            addCriterion("memMobile in", values, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileNotIn(List<String> values) {
            addCriterion("memMobile not in", values, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileBetween(String value1, String value2) {
            addCriterion("memMobile between", value1, value2, "memmobile");
            return (Criteria) this;
        }

        public Criteria andMemmobileNotBetween(String value1, String value2) {
            addCriterion("memMobile not between", value1, value2, "memmobile");
            return (Criteria) this;
        }

        public Criteria andOccurpointsIsNull() {
            addCriterion("occurPoints is null");
            return (Criteria) this;
        }

        public Criteria andOccurpointsIsNotNull() {
            addCriterion("occurPoints is not null");
            return (Criteria) this;
        }

        public Criteria andOccurpointsEqualTo(Long value) {
            addCriterion("occurPoints =", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsNotEqualTo(Long value) {
            addCriterion("occurPoints <>", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsGreaterThan(Long value) {
            addCriterion("occurPoints >", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsGreaterThanOrEqualTo(Long value) {
            addCriterion("occurPoints >=", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsLessThan(Long value) {
            addCriterion("occurPoints <", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsLessThanOrEqualTo(Long value) {
            addCriterion("occurPoints <=", value, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsIn(List<Long> values) {
            addCriterion("occurPoints in", values, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsNotIn(List<Long> values) {
            addCriterion("occurPoints not in", values, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsBetween(Long value1, Long value2) {
            addCriterion("occurPoints between", value1, value2, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andOccurpointsNotBetween(Long value1, Long value2) {
            addCriterion("occurPoints not between", value1, value2, "occurpoints");
            return (Criteria) this;
        }

        public Criteria andPointsIsNull() {
            addCriterion("points is null");
            return (Criteria) this;
        }

        public Criteria andPointsIsNotNull() {
            addCriterion("points is not null");
            return (Criteria) this;
        }

        public Criteria andPointsEqualTo(Long value) {
            addCriterion("points =", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsNotEqualTo(Long value) {
            addCriterion("points <>", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsGreaterThan(Long value) {
            addCriterion("points >", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsGreaterThanOrEqualTo(Long value) {
            addCriterion("points >=", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsLessThan(Long value) {
            addCriterion("points <", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsLessThanOrEqualTo(Long value) {
            addCriterion("points <=", value, "points");
            return (Criteria) this;
        }

        public Criteria andPointsIn(List<Long> values) {
            addCriterion("points in", values, "points");
            return (Criteria) this;
        }

        public Criteria andPointsNotIn(List<Long> values) {
            addCriterion("points not in", values, "points");
            return (Criteria) this;
        }

        public Criteria andPointsBetween(Long value1, Long value2) {
            addCriterion("points between", value1, value2, "points");
            return (Criteria) this;
        }

        public Criteria andPointsNotBetween(Long value1, Long value2) {
            addCriterion("points not between", value1, value2, "points");
            return (Criteria) this;
        }

        public Criteria andDirectionIsNull() {
            addCriterion("direction is null");
            return (Criteria) this;
        }

        public Criteria andDirectionIsNotNull() {
            addCriterion("direction is not null");
            return (Criteria) this;
        }

        public Criteria andDirectionEqualTo(String value) {
            addCriterion("direction =", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotEqualTo(String value) {
            addCriterion("direction <>", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionGreaterThan(String value) {
            addCriterion("direction >", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionGreaterThanOrEqualTo(String value) {
            addCriterion("direction >=", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLessThan(String value) {
            addCriterion("direction <", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLessThanOrEqualTo(String value) {
            addCriterion("direction <=", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionLike(String value) {
            addCriterion("direction like", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotLike(String value) {
            addCriterion("direction not like", value, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionIn(List<String> values) {
            addCriterion("direction in", values, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotIn(List<String> values) {
            addCriterion("direction not in", values, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionBetween(String value1, String value2) {
            addCriterion("direction between", value1, value2, "direction");
            return (Criteria) this;
        }

        public Criteria andDirectionNotBetween(String value1, String value2) {
            addCriterion("direction not between", value1, value2, "direction");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Integer value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Integer value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Integer value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Integer value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Integer value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Integer value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Integer> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Integer> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Integer value1, Integer value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Integer value1, Integer value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andNumberLikeInsensitive(String value) {
            addCriterion("upper(number) like", value.toUpperCase(), "number");
            return (Criteria) this;
        }

        public Criteria andSheetnameLikeInsensitive(String value) {
            addCriterion("upper(sheetName) like", value.toUpperCase(), "sheetname");
            return (Criteria) this;
        }

        public Criteria andMemnameLikeInsensitive(String value) {
            addCriterion("upper(memName) like", value.toUpperCase(), "memname");
            return (Criteria) this;
        }

        public Criteria andMemcardLikeInsensitive(String value) {
            addCriterion("upper(memCard) like", value.toUpperCase(), "memcard");
            return (Criteria) this;
        }

        public Criteria andBiznameLikeInsensitive(String value) {
            addCriterion("upper(bizName) like", value.toUpperCase(), "bizname");
            return (Criteria) this;
        }

        public Criteria andMemmobileLikeInsensitive(String value) {
            addCriterion("upper(memMobile) like", value.toUpperCase(), "memmobile");
            return (Criteria) this;
        }

        public Criteria andDirectionLikeInsensitive(String value) {
            addCriterion("upper(direction) like", value.toUpperCase(), "direction");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table point_flow
     *
     * @mbg.generated do_not_delete_during_merge Wed May 08 14:50:48 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table point_flow
     *
     * @mbg.generated Wed May 08 14:50:48 CST 2019
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}